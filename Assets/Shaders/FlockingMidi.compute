#pragma kernel CSMain

struct Boid 
{
    float3 position;
    float3 forward;
    float3 targetDir;
    float2 boidOptions;
    int neighbours;
    int cell;
};


int boidCount;
float3 stageSize;
RWStructuredBuffer<int> countBuffer;
RWStructuredBuffer<Boid> boidBuffer;

int GetCell(float3 pos) {
    return 0;
}

[numthreads(64, 1, 1)]
void CSMain (uint3 id : SV_DispatchThreadID) 
{
    int sum = 0;
     
    for (int i = 0; i < boidCount; i++) {
        if (boidBuffer[i].cell == (int)id.x) sum++;
    }
    
    countBuffer[id.x] = sum;
}